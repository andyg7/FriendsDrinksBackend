buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.commercehub.gradle.plugin:gradle-avro-plugin:0.15.1'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.2'
    }
}

plugins {
    id 'java'
    id 'com.google.cloud.tools.jib' version '1.1.1'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
version = '0.0.1'

repositories {
    mavenCentral()
    jcenter()

    maven {
        url 'http://packages.confluent.io/maven'
    }
}

apply plugin: 'com.commercehub.gradle.plugin.avro'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'checkstyle'

checkstyle {
    toolVersion '7.8.1'
    configFile file("config/checkstyle/checkstyle.xml")
}
checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}

dependencies {
    compile 'org.apache.avro:avro:1.8.2'
    implementation 'org.slf4j:slf4j-simple:1.7.26'
    implementation 'org.apache.kafka:kafka-streams:2.2.0'
    implementation 'io.confluent:kafka-streams-avro-serde:5.2.0'
    testCompile 'org.apache.kafka:kafka-streams-test-utils:2.2.0'
    testCompile 'junit:junit:4.12'
}

test {
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}

task runUserDetailsService(type: JavaExec) {
   main = 'andrewgrant.friendsdrinks.email.UserEmailValidatorService'
   classpath = sourceSets.main.runtimeClasspath
   args = ['configuration/dev.properties']
}

task runEmailWriterService(type: JavaExec) {
    main = 'andrewgrant.friendsdrinks.email.EmailWriterService'
    classpath = sourceSets.main.runtimeClasspath
    args = ['configuration/dev.properties']
}

